{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Desktop\\\\Reactjs\\\\next\\\\nextjs\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { Fragment } from 'react';\nimport Head from 'next/head';\nimport { MongoClient, ObjectId } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      description: props.meetupData.description,\n      address: props.meetupData.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://duy1506:8aekmWYNOO099aTd@cluster0.evptf.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: 'blocking',\n    paths: (await meetups).map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://duy1506:8aekmWYNOO099aTd@cluster0.evptf.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupCollection = db.collection('meetups');\n  const selectedMeetup = await meetupCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  console.log(selectedMeetup);\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        description: selectedMeetup.description,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Users/ACER/Desktop/Reactjs/next/nextjs/pages/[meetupId]/index.js"],"names":["Fragment","Head","MongoClient","ObjectId","MeetupDetail","MeetupDetails","props","meetupData","title","description","image","address","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","meetupCollection","selectedMeetup","findOne","console","log","close","id"],"mappings":";;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,WAAR,EAAqBC,QAArB,QAAoC,SAApC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7B,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE;AAAnD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,YAAD;AACA,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KADxB;AAEA,MAAA,KAAK,EAAEJ,KAAK,CAACC,UAAN,CAAiBC,KAFxB;AAGA,MAAA,WAAW,EAAEF,KAAK,CAACC,UAAN,CAAiBE,WAH9B;AAIA,MAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBI;AAJ1B;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAfD;;AAiBA,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoB,uGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAGF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA3B,EAAqCC,OAArC,EAAhB;AAGA,SAAO;AACHC,IAAAA,QAAQ,EAAE,UADP;AAEHC,IAAAA,KAAK,EAAE,CAAC,MAAML,OAAP,EAAgBM,GAAhB,CAAqBC,MAAD,KAAa;AACpCC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AAAZ;AAD4B,KAAb,CAApB;AAFJ,GAAP;AAMH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAE1C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMd,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoB,uGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMgB,gBAAgB,GAAGhB,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AAEA,QAAMe,cAAc,GAAG,MAAMD,gBAAgB,CAACE,OAAjB,CAAyB;AAClDb,IAAAA,GAAG,EAAEjB,QAAQ,CAACwB,QAAD;AADqC,GAAzB,CAA7B;AAIAO,EAAAA,OAAO,CAACC,GAAR,CAAYH,cAAZ;AAEAnB,EAAAA,MAAM,CAACuB,KAAP;AAEA,SAAO;AACH9B,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AACR8B,QAAAA,EAAE,EAAEL,cAAc,CAACZ,GAAf,CAAmBQ,QAAnB,EADI;AAERpB,QAAAA,KAAK,EAAEwB,cAAc,CAACxB,KAFd;AAGRC,QAAAA,WAAW,EAAEuB,cAAc,CAACvB,WAHpB;AAIRE,QAAAA,OAAO,EAAEqB,cAAc,CAACrB,OAJhB;AAKRD,QAAAA,KAAK,EAAEsB,cAAc,CAACtB;AALd;AADT;AADJ,GAAP;AAWH;AAED,eAAeL,aAAf","sourcesContent":["import {Fragment} from 'react';\r\nimport Head from 'next/head';\r\nimport {MongoClient, ObjectId} from 'mongodb';\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\r\n\r\nconst MeetupDetails = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <Head>\r\n                <title>{props.meetupData.title}</title>\r\n                <meta name=\"description\" content={props.meetupData.description}/>\r\n            </Head>\r\n            <MeetupDetail\r\n            image={props.meetupData.image}\r\n            title={props.meetupData.title}\r\n            description={props.meetupData.description}\r\n            address={props.meetupData.address}\r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect('mongodb+srv://duy1506:8aekmWYNOO099aTd@cluster0.evptf.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const meetups = meetupsCollection.find({}, {_id: 1}).toArray();\r\n\r\n\r\n    return {\r\n        fallback: 'blocking',\r\n        paths: (await meetups).map((meetup) => ({\r\n            params: { meetupId: meetup._id.toString()},\r\n        })),\r\n    }\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n\r\n    const meetupId = context.params.meetupId;\r\n\r\n    const client = await MongoClient.connect('mongodb+srv://duy1506:8aekmWYNOO099aTd@cluster0.evptf.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n    const meetupCollection = db.collection('meetups');\r\n\r\n    const selectedMeetup = await meetupCollection.findOne({\r\n        _id: ObjectId(meetupId)\r\n    })\r\n\r\n    console.log(selectedMeetup);\r\n\r\n    client.close();\r\n\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                id: selectedMeetup._id.toString(),\r\n                title: selectedMeetup.title,\r\n                description: selectedMeetup.description,\r\n                address: selectedMeetup.address,\r\n                image: selectedMeetup.image,\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}