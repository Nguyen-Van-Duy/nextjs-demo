{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Desktop\\\\Reactjs\\\\next\\\\nextjs\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport { Fragment } from 'react';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nvar MeetupDetails = function MeetupDetails(props) {\n  document.title = 'About';\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      description: props.meetupData.description,\n      address: props.meetupData.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Users/ACER/Desktop/Reactjs/next/nextjs/pages/[meetupId]/index.js"],"names":["Fragment","MeetupDetail","MeetupDetails","props","document","title","meetupData","image","description","address"],"mappings":";;;;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC7BC,EAAAA,QAAQ,CAACC,KAAT,GAAiB,OAAjB;AACA,sBACI,QAAC,QAAD;AAAA,2BACI,QAAC,YAAD;AACA,MAAA,KAAK,EAAEF,KAAK,CAACG,UAAN,CAAiBC,KADxB;AAEA,MAAA,KAAK,EAAEJ,KAAK,CAACG,UAAN,CAAiBD,KAFxB;AAGA,MAAA,WAAW,EAAEF,KAAK,CAACG,UAAN,CAAiBE,WAH9B;AAIA,MAAA,OAAO,EAAEL,KAAK,CAACG,UAAN,CAAiBG;AAJ1B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAUH,CAZD;;KAAMP,a;;AA4DN,eAAeA,aAAf","sourcesContent":["import {Fragment} from 'react';\r\nimport {MongoClient, ObjectId} from 'mongodb';\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\r\n\r\nconst MeetupDetails = (props) => {\r\n    document.title = 'About';\r\n    return (\r\n        <Fragment>\r\n            <MeetupDetail\r\n            image={props.meetupData.image}\r\n            title={props.meetupData.title}\r\n            description={props.meetupData.description}\r\n            address={props.meetupData.address}\r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect('mongodb+srv://duy1506:8aekmWYNOO099aTd@cluster0.evptf.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const meetups = meetupsCollection.find({}, {_id: 1}).toArray();\r\n\r\n\r\n    return {\r\n        fallback: false,\r\n        paths: (await meetups).map((meetup) => ({\r\n            params: { meetupId: meetup._id.toString()},\r\n        })),\r\n    }\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n\r\n    const meetupId = context.params.meetupId;\r\n\r\n    const client = await MongoClient.connect('mongodb+srv://duy1506:8aekmWYNOO099aTd@cluster0.evptf.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n    const meetupCollection = db.collection('meetups');\r\n\r\n    const selectedMeetup = await meetupCollection.findOne({\r\n        _id: ObjectId(meetupId)\r\n    })\r\n\r\n    console.log(selectedMeetup);\r\n\r\n    client.close();\r\n\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                id: selectedMeetup._id.toString(),\r\n                title: selectedMeetup.title,\r\n                description: selectedMeetup.description,\r\n                address: selectedMeetup.address,\r\n                image: selectedMeetup.image,\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}